<!-- views/user/orders.ejs -->
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        /* Header Styles */
        header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 1rem 0;
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        
        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            font-size: 2rem;
            font-weight: bold;
            background: linear-gradient(45deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .nav-links {
            display: flex;
            list-style: none;
            gap: 30px;
        }
        
        .nav-links a {
            text-decoration: none;
            color: #333;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .nav-links a:hover {
            color: #667eea;
            transform: translateY(-2px);
        }
        
        .cart-btn {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 25px;
            text-decoration: none;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }
        
        .nav-user {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(45deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
        }
        
        /* Breadcrumb */
        .breadcrumb {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 15px 0;
            margin: 20px 0;
            border-radius: 15px;
            color: white;
        }
        
        .breadcrumb-list {
            display: flex;
            align-items: center;
            gap: 10px;
            list-style: none;
        }
        
        .breadcrumb a {
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: color 0.3s ease;
        }
        
        .breadcrumb a:hover {
            color: white;
        }
        
        .breadcrumb-separator {
            color: rgba(255, 255, 255, 0.6);
        }
        
        /* Orders Content */
        .orders-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(15px);
            padding: 40px;
            border-radius: 25px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            margin: 20px 0;
        }
        
        .orders-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #f0f0f0;
        }
        
        .orders-title {
            font-size: 2rem;
            font-weight: 600;
            color: #333;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .orders-stats {
            display: flex;
            gap: 20px;
            color: #666;
            font-size: 0.9rem;
        }
        
        .stat-item {
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .orders-filters {
            display: flex;
            gap: 15px;
            margin-bottom: 30px;
            align-items: center;
        }
        
        .filter-select {
            padding: 10px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .filter-select:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .search-input {
            flex: 1;
            padding: 10px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 14px;
            transition: all 0.3s ease;
        }
        
        .search-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        /* Orders List */
        .orders-list {
            margin-bottom: 30px;
        }
        
        .order-card {
            background: white;
            border: 1px solid #e0e0e0;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        
        .order-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            border-color: #667eea;
        }
        
        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #f0f0f0;
        }
        
        .order-id {
            font-size: 1.1rem;
            font-weight: 600;
            color: #333;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .order-status {
            padding: 6px 15px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .status-pending {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
        
        .status-confirmed {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .status-shipping {
            background: #cce5ff;
            color: #004085;
            border: 1px solid #99ccff;
        }
        
        .status-delivered {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }
        
        .status-cancelled {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f1b0b7;
        }
        
        .order-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 15px;
        }
        
        .info-item {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }
        
        .info-label {
            font-size: 0.85rem;
            color: #666;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .info-value {
            font-size: 1rem;
            color: #333;
            font-weight: 500;
        }
        
        .order-items {
            margin: 15px 0;
        }
        
        .order-items-header {
            font-size: 0.9rem;
            color: #666;
            margin-bottom: 10px;
            font-weight: 500;
        }
        
        .order-items-list {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .order-item {
            background: #f8f9fa;
            padding: 8px 12px;
            border-radius: 8px;
            font-size: 0.85rem;
            color: #555;
            border: 1px solid #e9ecef;
        }
        
        .order-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #f0f0f0;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 8px;
            font-size: 0.85rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }
        
        .btn-primary {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }
        
        .btn-secondary {
            background: white;
            color: #667eea;
            border: 2px solid #667eea;
        }
        
        .btn-secondary:hover {
            background: #667eea;
            color: white;
        }
        
        .btn-danger {
            background: #e74c3c;
            color: white;
        }
        
        .btn-danger:hover {
            background: #c0392b;
            transform: translateY(-2px);
        }
        
        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
        }
        
        .empty-icon {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.6;
        }
        
        .empty-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 10px;
        }
        
        .empty-text {
            color: #666;
            margin-bottom: 30px;
            line-height: 1.6;
        }
        
        .empty-action {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }
        
        .empty-action:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }
        
        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 30px;
        }
        
        .pagination-btn {
            padding: 10px 15px;
            border: 2px solid #e0e0e0;
            background: white;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            color: #333;
        }
        
        .pagination-btn:hover:not(.disabled) {
            border-color: #667eea;
            color: #667eea;
        }
        
        .pagination-btn.active {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border-color: transparent;
        }
        
        .pagination-btn.disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        footer {
            background: rgba(0, 0, 0, 0.8);
            color: white;
            text-align: center;
            padding: 40px 0;
            margin-top: 60px;
            backdrop-filter: blur(10px);
        }
        
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }
            
            .orders-container {
                padding: 25px 20px;
                margin: 10px;
            }
            
            .orders-header {
                flex-direction: column;
                gap: 15px;
                align-items: stretch;
            }
            
            .orders-filters {
                flex-direction: column;
                gap: 10px;
            }
            
            .order-info {
                grid-template-columns: 1fr;
                gap: 15px;
            }
            
            .order-actions {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <header>
        <nav class="container">
            <div class="logo">SportShop</div>
            <ul class="nav-links">
                <li><a href="/">Trang chủ</a></li>
                <li><a href="/products">Sản phẩm</a></li>
                <li><a href="/about">Giới thiệu</a></li>
                <li><a href="/contact">Liên hệ</a></li>
            </ul>
            
            <div class="nav-user">
                <a href="/cart" class="cart-btn">
                    🛒 Giỏ hàng (<%= typeof cartItemCount !== 'undefined' ? cartItemCount : 0 %>)
                </a>
                
                <div class="user-avatar" title="<%= user.fullName %>">
                    <%= user.initials || user.fullName.charAt(0) %>
                </div>
            </div>
        </nav>
    </header>

    <main class="container">
        <!-- Breadcrumb -->
        <nav class="breadcrumb">
            <ul class="breadcrumb-list">
                <li><a href="/user/account">Tài khoản</a></li>
                <li class="breadcrumb-separator">→</li>
                <li>Đơn hàng của tôi</li>
            </ul>
        </nav>

        <!-- Orders Container -->
        <div class="orders-container">
            <!-- Orders Header -->
            <div class="orders-header">
                <h1 class="orders-title">
                    📦 Đơn hàng của tôi
                </h1>
                <div class="orders-stats">
                    <div class="stat-item">
                        <span>📊</span>
                        <span>Tổng: <%= orders.length %> đơn hàng</span>
                    </div>
                </div>
            </div>

            <!-- Orders Filters -->
            <div class="orders-filters">
                <select class="filter-select" id="statusFilter" onchange="filterOrders()">
                    <option value="">Tất cả trạng thái</option>
                    <option value="pending">Chờ xử lý</option>
                    <option value="confirmed">Đã xác nhận</option>
                    <option value="shipping">Đang giao</option>
                    <option value="delivered">Đã giao</option>
                    <option value="cancelled">Đã hủy</option>
                </select>
                
                <input type="text" class="search-input" placeholder="🔍 Tìm kiếm theo mã đơn hàng..." 
                       id="searchInput" onkeyup="searchOrders()">
            </div>

            <!-- Orders List -->
            <div class="orders-list">
                <% if (orders && orders.length > 0) { %>
                    <% orders.forEach(order => { %>
                        <div class="order-card" data-status="<%= order.status %>" data-id="<%= order.orderId %>">
                            <div class="order-card-header">
                                <div class="order-id">
                                    <strong>Đơn hàng #<%= order.orderId %></strong>
                                    <span class="order-date"><%= order.formattedDate %></span>
                                </div>
                                <span class="order-status <%= order.statusDisplay.class %>">
                                    <%= order.statusDisplay.icon %> <%= order.statusDisplay.text %>
                                </span>
                            </div>

                            <div class="order-summary">
                                <div class="order-info">
                                    <div class="info-row">
                                        <span class="info-label">👤 Khách hàng:</span>
                                        <span class="info-value"><%= order.customer.name %></span>
                                    </div>
                                    <div class="info-row">
                                        <span class="info-label">📍 Giao đến:</span>
                                        <span class="info-value"><%= order.shipping.district %>, <%= order.shipping.city %></span>
                                    </div>
                                    <div class="info-row">
                                        <span class="info-label">💳 Thanh toán:</span>
                                        <span class="info-value">
                                            <% if (order.paymentMethod === 'cod') { %>
                                                💵 COD
                                            <% } else if (order.paymentMethod === 'bank_transfer') { %>
                                                🏦 Chuyển khoản
                                            <% } else { %>
                                                💳 <%= order.paymentMethod %>
                                            <% } %>
                                        </span>
                                    </div>
                                    <div class="info-row">
                                        <span class="info-label">🚚 Dự kiến giao:</span>
                                        <span class="info-value"><%= order.estimatedDelivery.toLocaleDateString('vi-VN') %></span>
                                    </div>
                                </div>
                                <div class="order-total">
                                    <div class="total-amount"><%= order.finalTotal.toLocaleString('vi-VN') %>đ</div>
                                    <div class="total-items"><%= order.totalItems %> sản phẩm</div>
                                </div>
                            </div>

                            <div class="order-items">
                                <div class="order-items-header">Sản phẩm (<%= order.totalItems %> món)</div>
                                <div class="order-items-list">
                                    <% order.items.slice(0, 3).forEach(item => { %>
                                        <div class="order-item">
                                            <%= item.productName %> 
                                            <% if (item.color !== 'Mặc định' || item.size !== 'Mặc định') { %>
                                                (<%= item.color %>, <%= item.size %>)
                                            <% } %>
                                            × <%= item.quantity %>
                                        </div>
                                    <% }) %>
                                    <% if (order.items.length > 3) { %>
                                        <div class="order-item">
                                            ... và <%= order.items.length - 3 %> sản phẩm khác
                                        </div>
                                    <% } %>
                                </div>
                            </div>

                            <div class="order-actions">
                                <a href="/user/orders/<%= order.orderId %>" class="btn btn-primary">
                                    👁️ Xem chi tiết
                                </a>
                                <% if (order.status === 'pending' || order.status === 'confirmed') { %>
                                    <button class="btn btn-danger" onclick="cancelOrder('<%= order.orderId %>')">
                                        ❌ Hủy đơn hàng
                                    </button>
                                <% } %>
                                <% if (order.status === 'delivered') { %>
                                    <button class="btn btn-secondary" onclick="reorder('<%= order.orderId %>')">
                                        🔄 Đặt lại
                                    </button>
                                <% } %>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <!-- Empty State -->
                    <div class="empty-state">
                        <div class="empty-icon">📦</div>
                        <h2 class="empty-title">Chưa có đơn hàng nào</h2>
                        <p class="empty-text">
                            Bạn chưa đặt đơn hàng nào. Hãy khám phá các sản phẩm tuyệt vời và bắt đầu mua sắm ngay!
                        </p>
                        <a href="/products" class="empty-action">
                            🛍️ Bắt đầu mua sắm
                        </a>
                    </div>
                <% } %>
            </div>

        <!-- Updated JavaScript for reorder functionality -->
        <script>
            // Filter orders by status
            function filterOrders() {
                const statusFilter = document.getElementById('statusFilter').value;
                const orderCards = document.querySelectorAll('.order-card');
                
                orderCards.forEach(card => {
                    const cardStatus = card.getAttribute('data-status');
                    if (!statusFilter || cardStatus === statusFilter) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            }

            // Search orders
            function searchOrders() {
                const searchInput = document.getElementById('searchInput').value.toLowerCase();
                const orderCards = document.querySelectorAll('.order-card');
                
                orderCards.forEach(card => {
                    const orderId = card.getAttribute('data-id').toLowerCase();
                    if (orderId.includes(searchInput)) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            }

            // Cancel order - Updated with real functionality
            async function cancelOrder(orderId) {
                const reason = prompt('Lý do hủy đơn hàng (tùy chọn):') || 'Customer request';
                const confirmed = confirm(`Bạn có chắc chắn muốn hủy đơn hàng #${orderId}?`);
                
                if (confirmed) {
                    try {
                        const response = await fetch(`/user/orders/${orderId}/cancel`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ reason })
                        });
                        
                        const result = await response.json();
                        
                        if (result.success) {
                            alert('✅ Đơn hàng đã được hủy thành công');
                            location.reload();
                        } else {
                            alert('❌ ' + result.message);
                        }
                    } catch (error) {
                        console.error('Error cancelling order:', error);
                        alert('❌ Có lỗi xảy ra khi hủy đơn hàng');
                    }
                }
            }

            // Reorder - Updated with real functionality
            async function reorder(orderId) {
                const confirmed = confirm('Bạn muốn đặt lại đơn hàng này? Các sản phẩm sẽ được thêm vào giỏ hàng.');
                
                if (confirmed) {
                    try {
                        const response = await fetch(`/user/orders/${orderId}/reorder`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        });
                        
                        const result = await response.json();
                        
                        if (result.success) {
                            alert('✅ ' + result.message);
                            if (result.data && result.data.redirectUrl) {
                                window.location.href = result.data.redirectUrl;
                            } else {
                                location.reload(); // Refresh to update cart count
                            }
                        } else {
                            alert('❌ ' + result.message);
                        }
                    } catch (error) {
                        console.error('Error reordering:', error);
                        alert('❌ Có lỗi xảy ra khi đặt lại đơn hàng');
                    }
                }
            }

            // Set selected status filter if provided
            document.addEventListener('DOMContentLoaded', function() {
                const statusFilter = document.getElementById('statusFilter');
                const selectedStatus = '<%= selectedStatus || "" %>';
                
                if (selectedStatus && statusFilter) {
                    statusFilter.value = selectedStatus;
                    filterOrders(); // Apply filter on page load
                }

                // Page load animations
                const orderCards = document.querySelectorAll('.order-card');
                orderCards.forEach((card, index) => {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(20px)';
                    
                    setTimeout(() => {
                        card.style.transition = 'all 0.6s ease';
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                    }, index * 100);
                });
            });
        </script>
</body>
</html>