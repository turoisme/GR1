<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 1rem 0;
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        
        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            font-size: 2rem;
            font-weight: bold;
            background: linear-gradient(45deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .nav-links {
            display: flex;
            list-style: none;
            gap: 30px;
        }
        
        .nav-links a {
            text-decoration: none;
            color: #333;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .nav-links a:hover {
            color: #667eea;
            transform: translateY(-2px);
        }
        
        .cart-btn {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 25px;
            text-decoration: none;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }
        
        .cart-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
        }
        
        .page-header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 40px 0;
            text-align: center;
            margin: 40px 0;
            border-radius: 20px;
            color: white;
        }
        
        .page-header h1 {
            font-size: 2.5rem;
            margin-bottom: 15px;
            text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }
        
        .checkout-container {
            display: grid;
            grid-template-columns: 1fr 400px;
            gap: 40px;
            margin: 40px 0;
        }
        
        .checkout-form {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }
        
        .order-summary {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            height: fit-content;
            position: sticky;
            top: 120px;
        }
        
        .section-title {
            font-size: 1.8rem;
            font-weight: bold;
            margin-bottom: 25px;
            color: #333;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
        
        .form-group label {
            display: block;
            font-weight: 600;
            margin-bottom: 8px;
            color: #333;
        }
        
        .required {
            color: #e74c3c;
        }
        
        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: white;
        }
        
        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        .form-group input.error,
        .form-group select.error,
        .form-group textarea.error {
            border-color: #e74c3c;
            background-color: #fff5f5;
        }
        
        .error-message {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
        
        .payment-methods {
            display: grid;
            gap: 15px;
            margin-top: 10px;
        }
        
        .payment-option {
            display: flex;
            align-items: center;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: white;
        }
        
        .payment-option:hover {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.05);
        }
        
        .payment-option.selected {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.1);
        }
        
        .payment-option input[type="radio"] {
            margin-right: 12px;
            width: auto;
        }
        
        .payment-icon {
            font-size: 1.5rem;
            margin-right: 10px;
        }
        
        .payment-info {
            flex: 1;
        }
        
        .payment-name {
            font-weight: 600;
            margin-bottom: 5px;
        }
        
        .payment-desc {
            font-size: 14px;
            color: #666;
        }
        
        .payment-details {
            margin-top: 20px;
            padding: 25px;
            background: #f8f9fa;
            border-radius: 15px;
            border: 2px solid #667eea;
        }
        
        .momo-details {
            background: #f8f9fa;
            color: #333;
        }
        
        .qr-container, .momo-qr-container {
            text-align: center;
            margin: 20px 0;
        }
        
        .qr-code, .momo-qr-code {
            display: inline-block;
            background: white;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        .qr-code img, .momo-qr-code img {
            width: 200px;
            height: 200px;
            border: 2px solid #ddd;
            border-radius: 8px;
            object-fit: cover;
        }
        
        .bank-info, .momo-info {
            text-align: left;
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-top: 15px;
        }
        
        .momo-info {
            background: rgba(255, 255, 255, 0.1);
            color: white;
            text-align: center;
        }
        
        .bank-info p, .momo-info p {
            margin-bottom: 10px;
            font-size: 14px;
        }
        
        .bank-info strong, .momo-info strong {
            color: #333;
        }
        
        .momo-info strong {
            color: white;
        }
        
        .transfer-note, .momo-steps {
            background: rgba(102, 126, 234, 0.1);
            padding: 15px;
            border-radius: 8px;
            margin-top: 15px;
        }
        
        .momo-steps {
            background: rgba(255, 255, 255, 0.1);
            text-align: left;
        }
        
        .momo-steps h5 {
            color: white;
            margin-bottom: 15px;
        }
        
        .momo-steps ol {
            margin: 10px 0;
            padding-left: 20px;
        }
        
        .momo-steps li {
            margin-bottom: 8px;
            font-size: 14px;
        }
        
        .transfer-note p, .momo-steps p {
            font-size: 12px;
            color: #666;
            margin: 0;
        }
        
        .momo-steps p {
            color: rgba(255, 255, 255, 0.9);
            margin-top: 15px;
        }
        
        .order-item {
            display: flex;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid #eee;
        }
        
        .order-item:last-child {
            border-bottom: none;
        }
        
        .item-image {
            width: 70px;
            height: 70px;
            border-radius: 10px;
            margin-right: 15px;
            flex-shrink: 0;
            overflow: hidden;
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
        }
        
        .item-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 8px;
        }
        
        .item-image .emoji-fallback {
            font-size: 2rem;
            color: white;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }
        
        .item-details {
            flex: 1;
        }
        
        .item-name {
            font-weight: 600;
            margin-bottom: 5px;
            font-size: 0.95rem;
        }
        
        .item-options {
            font-size: 13px;
            color: #666;
            margin-bottom: 5px;
        }
        
        .item-quantity {
            font-size: 13px;
            color: #666;
        }
        
        .item-price {
            font-weight: 600;
            color: #667eea;
            font-size: 0.95rem;
        }
        
        .summary-row {
            display: flex;
            justify-content: space-between;
            padding: 12px 0;
            border-bottom: 1px solid #eee;
        }
        
        .summary-row:last-child {
            border-bottom: none;
            font-weight: bold;
            font-size: 1.2rem;
            color: #667eea;
            padding-top: 20px;
            margin-top: 10px;
            border-top: 2px solid #667eea;
        }
        
        .checkout-btn {
            width: 100%;
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 15px;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 20px;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }
        
        .checkout-btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }
        
        .checkout-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }
        
        .loading.show {
            display: block;
        }
        
        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(45deg, #28a745, #20c997);
            color: white;
            padding: 15px 25px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.3);
            transform: translateX(400px);
            transition: transform 0.3s ease;
            z-index: 1001;
            max-width: 400px;
        }
        
        .notification.show {
            transform: translateX(0);
        }
        
        .notification.error {
            background: linear-gradient(45deg, #dc3545, #c82333);
            box-shadow: 0 5px 15px rgba(220, 53, 69, 0.3);
        }
        
        .security-badges {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #eee;
        }
        
        .security-badge {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #666;
            font-size: 14px;
        }
        
        .security-icon {
            color: #28a745;
        }
        
        .hanoi-info {
            background: rgba(102, 126, 234, 0.1);
            padding: 15px;
            border-radius: 10px;
            margin-top: 10px;
            border: 1px solid rgba(102, 126, 234, 0.3);
        }
        
        .hanoi-info p {
            margin: 0;
            font-size: 14px;
            color: #555;
            text-align: center;
        }
        
        footer {
            background: rgba(0, 0, 0, 0.8);
            color: white;
            text-align: center;
            padding: 40px 0;
            margin-top: 60px;
            backdrop-filter: blur(10px);
        }
        
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }
            
            .checkout-container {
                grid-template-columns: 1fr;
                gap: 20px;
            }
            
            .order-summary {
                position: static;
                order: -1;
            }
            
            .checkout-form {
                padding: 30px 20px;
            }
            
            .form-row {
                grid-template-columns: 1fr;
            }
            
            .page-header h1 {
                font-size: 2rem;
            }
            
            .item-image {
                width: 60px;
                height: 60px;
            }
            
            .item-name {
                font-size: 0.9rem;
            }
            
            .qr-code img, .momo-qr-code img {
                width: 160px;
                height: 160px;
            }
        }
    </style>
</head>
<body>
    <header>
        <nav class="container">
            <div class="logo">SportShop</div>
            <ul class="nav-links">
                <li><a href="/">Trang chủ</a></li>
                <li><a href="/products">Sản phẩm</a></li>
                <li><a href="/about">Giới thiệu</a></li>
                <li><a href="/contact">Liên hệ</a></li>
            </ul>
            <a href="/cart" class="cart-btn">
                🛒 Giỏ hàng (<%= typeof cartItemCount !== 'undefined' ? cartItemCount : 0 %>)
            </a>
        </nav>
    </header>

    <main class="container">
        <section class="page-header">
            <h1>💳 Thanh Toán</h1>
            <p>Hoàn tất đơn hàng của bạn một cách an toàn và nhanh chóng</p>
        </section>

        <div class="checkout-container">
            <!-- Checkout Form -->
            <div class="checkout-form">
                <form id="checkoutForm">
                    <!-- Customer Information -->
                    <div class="form-section">
                        <h2 class="section-title">
                            👤 Thông tin khách hàng
                        </h2>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label for="customerName">Họ và tên <span class="required">*</span></label>
                                <input type="text" id="customerName" name="customerName" required>
                                <div class="error-message">Vui lòng nhập họ tên</div>
                            </div>
                            
                            <div class="form-group">
                                <label for="customerPhone">Số điện thoại <span class="required">*</span></label>
                                <input type="tel" id="customerPhone" name="customerPhone" required>
                                <div class="error-message">Vui lòng nhập số điện thoại hợp lệ</div>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="customerEmail">Email <span class="required">*</span></label>
                            <input type="email" id="customerEmail" name="customerEmail" required>
                            <div class="error-message">Vui lòng nhập email hợp lệ</div>
                        </div>
                    </div>

                    <!-- Shipping Address -->
                    <div class="form-section">
                        <h2 class="section-title">
                            🚚 Địa chỉ giao hàng
                        </h2>
                        
                        <div class="form-group">
                            <label for="shippingAddress">Địa chỉ chi tiết <span class="required">*</span></label>
                            <textarea id="shippingAddress" name="shippingAddress" rows="3" 
                                placeholder="Số nhà, tên đường, phường/xã..." required></textarea>
                            <div class="error-message">Vui lòng nhập địa chỉ giao hàng</div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label for="city">Khu vực giao hàng <span class="required">*</span></label>
                                <select id="city" name="city" required>
                                    <option value="hanoi" selected>Hà Nội</option>
                                </select>
                                <div class="hanoi-info">
                                    <p>ℹ️ Hiện tại chỉ giao hàng trong khu vực Hà Nội</p>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="district">Quận/Huyện <span class="required">*</span></label>
                                <select id="district" name="district" required>
                                    <option value="">Chọn quận/huyện</option>
                                </select>
                                <div class="error-message">Vui lòng chọn quận/huyện</div>
                            </div>
                        </div>
                    </div>

                    <!-- Payment Method -->
                    <div class="form-section">
                        <h2 class="section-title">
                            💳 Phương thức thanh toán
                        </h2>
                        
                        <div class="payment-methods">
                            <div class="payment-option selected" data-method="cod">
                                <input type="radio" id="cod" name="paymentMethod" value="cod" checked>
                                <div class="payment-icon">🚚</div>
                                <div class="payment-info">
                                    <div class="payment-name">Thanh toán khi nhận hàng (COD)</div>
                                    <div class="payment-desc">Thanh toán bằng tiền mặt khi nhận hàng</div>
                                </div>
                            </div>
                            
                            <div class="payment-option" data-method="bank">
                                <input type="radio" id="bank" name="paymentMethod" value="bank">
                                <div class="payment-icon">🏦</div>
                                <div class="payment-info">
                                    <div class="payment-name">Chuyển khoản ngân hàng</div>
                                    <div class="payment-desc">Chuyển khoản qua QR Code hoặc số tài khoản</div>
                                </div>
                            </div>
                            
                            <div class="payment-option" data-method="momo">
                                <input type="radio" id="momo" name="paymentMethod" value="momo">
                                <div class="payment-icon">📱</div>
                                <div class="payment-info">
                                    <div class="payment-name">Ví MoMo</div>
                                    <div class="payment-desc">Thanh toán qua ví điện tử MoMo</div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- QR Payment Details for Bank -->
                        <div id="bankPaymentDetails" class="payment-details" style="display: none;">
                            <div class="qr-container">
                                <h4 style="margin-bottom: 20px; color: #333;">🏦 Chuyển khoản ngân hàng</h4>
                                <div class="qr-code">
                                    <img src="/assets/qr-codes/payment-qr.png" 
                                         alt="QR Code chuyển khoản"
                                         onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                    <div style="display: none; width: 200px; height: 200px; background: #f5f5f5; border: 2px solid #ddd; border-radius: 8px; align-items: center; justify-content: center; flex-direction: column; color: #666;">
                                        <div style="font-size: 2rem; margin-bottom: 10px;">🏦</div>
                                        <div style="font-size: 14px;">QR Code không tìm thấy</div>
                                    </div>
                                </div>
                                <div class="bank-info">
                                    <p><strong>🏦 Ngân hàng:</strong> Viettinbank</p>
                                    <p><strong>📱 STK:</strong> 101875664600</p>
                                    <p><strong>👤 Chủ TK:</strong> Nguyễn Thanh Tân</p>
                                    <p><strong>💰 Số tiền:</strong> <span id="transferAmount"><%= cart.finalTotal.toLocaleString('vi-VN') %>đ</span></p>
                                    <p style="color: #e74c3c; font-weight: bold;">
                                        <strong>📝 Nội dung:</strong><br>SportShop [Tên khách hàng]
                                    </p>
                                </div>
                                <div class="transfer-note">
                                    <p><strong>💡 Lưu ý:</strong> Vui lòng chuyển khoản đúng số tiền và nội dung để đơn hàng được xử lý nhanh nhất.</p>
                                </div>
                            </div>
                        </div>
                        
                        <!-- QR Payment Details for MoMo -->
                        <div id="momoPaymentDetails" class="payment-details" style="display: none;">
                            <div class="qr-container">
                                <h4 style="margin-bottom: 20px; color: #333;">📱 Thanh toán MoMo</h4>
                                <div class="qr-code">
                                    <img src="/assets/qr-codes/momo-qr.png" 
                                         alt="QR Code MoMo"
                                         onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                    <div style="display: none; width: 200px; height: 200px; background: #f5f5f5; border: 2px solid #ddd; border-radius: 8px; align-items: center; justify-content: center; flex-direction: column; color: #666;">
                                        <div style="font-size: 2rem; margin-bottom: 10px;">📱</div>
                                        <div style="font-size: 14px;">QR Code MoMo không tìm thấy</div>
                                    </div>
                                </div>
                                <div class="bank-info">
                                    <p><strong>📱 SĐT MoMo:</strong> 0866 387 718</p>
                                    <p><strong>👤 Chủ ví:</strong> Nguyễn Thanh Tân</p>
                                    <p><strong>💰 Số tiền:</strong> <span id="momoAmount"><%= cart.finalTotal.toLocaleString('vi-VN') %>đ</span></p>
                                    <p style="color: #e74c3c; font-weight: bold;">
                                        <strong>📝 Nội dung:</strong><br>SportShop [Tên khách hàng]
                                    </p>
                                </div>
                                <div class="transfer-note">
                                    <p><strong>💡 Lưu ý:</strong> Vui lòng chuyển khoản đúng số tiền và nội dung để đơn hàng được xử lý nhanh nhất.</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Order Notes -->
                    <div class="form-section">
                        <h2 class="section-title">
                            📝 Ghi chú đơn hàng
                        </h2>
                        
                        <div class="form-group">
                            <label for="orderNotes">Ghi chú (tùy chọn)</label>
                            <textarea id="orderNotes" name="orderNotes" rows="3" 
                                placeholder="Thời gian giao hàng mong muốn, ghi chú đặc biệt..."></textarea>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Order Summary -->
            <div class="order-summary">
                <h2 class="section-title">
                    📋 Tóm tắt đơn hàng
                </h2>
                
                <div class="order-items">
                    <% if (cart && !cart.isEmpty()) { %>
                        <% cart.items.forEach(item => { %>
                            <div class="order-item">
                                <div class="item-image">
                                    <% if (item.product.imageUrl || (item.product.images && item.product.images.length > 0)) { %>
                                        <img src="<%= item.product.getMainImage() %>" 
                                             alt="<%= item.product.name %>"
                                             onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                        <div class="emoji-fallback" style="display: none;"><%= item.product.image %></div>
                                    <% } else { %>
                                        <div class="emoji-fallback"><%= item.product.image %></div>
                                    <% } %>
                                </div>
                                <div class="item-details">
                                    <div class="item-name"><%= item.product.name %></div>
                                    <div class="item-options">
                                        <span>🎨 <%= item.color %></span> | 
                                        <span>📏 <%= item.size %></span>
                                    </div>
                                    <div class="item-quantity">Số lượng: <%= item.quantity %></div>
                                </div>
                                <div class="item-price"><%= item.subtotal.toLocaleString('vi-VN') %>đ</div>
                            </div>
                        <% }) %>
                    <% } %>
                </div>
                
                <div class="order-totals">
                    <div class="summary-row">
                        <span>Tạm tính:</span>
                        <span><%= cart.totalPrice.toLocaleString('vi-VN') %>đ</span>
                    </div>
                    <div class="summary-row">
                        <span>Phí vận chuyển:</span>
                        <span><%= cart.shippingFee === 0 ? 'Miễn phí' : cart.shippingFee.toLocaleString('vi-VN') + 'đ' %></span>
                    </div>
                    <div class="summary-row">
                        <span>Tổng cộng:</span>
                        <span><%= cart.finalTotal.toLocaleString('vi-VN') %>đ</span>
                    </div>
                </div>
                
                <button type="button" class="checkout-btn" id="placeOrderBtn">
                    🛒 Đặt hàng ngay
                </button>
                
                <div class="loading" id="loadingIndicator">
                    <div class="spinner"></div>
                    <p>Đang xử lý đơn hàng...</p>
                </div>
                
                <div class="security-badges">
                    <div class="security-badge">
                        <span class="security-icon">🔒</span>
                        <span>Bảo mật SSL</span>
                    </div>
                    <div class="security-badge">
                        <span class="security-icon">✅</span>
                        <span>Thanh toán an toàn</span>
                    </div>
                    <div class="security-badge">
                        <span class="security-icon">🚚</span>
                        <span>Giao hàng HN</span>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Notification -->
    <div class="notification" id="notification"></div>

    <footer>
        <div class="container">
            <p>&copy; 2025 SportShop - Dự án của Nguyễn Thanh Tân</p>
            <p>📧 Tan.NT225923@sis.hust.edu.vn | 📱 0866 387 718</p>
        </div>
    </footer>

    <script>
        // Form validation và xử lý
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('checkoutForm');
            const placeOrderBtn = document.getElementById('placeOrderBtn');
            const loadingIndicator = document.getElementById('loadingIndicator');
            
            // Payment method selection - CẬP NHẬT ĐỂ HỖ TRỢ MOMO
            const paymentOptions = document.querySelectorAll('.payment-option');
            const paymentRadios = document.querySelectorAll('input[name="paymentMethod"]');
            
            paymentOptions.forEach(option => {
                option.addEventListener('click', function() {
                    paymentOptions.forEach(opt => opt.classList.remove('selected'));
                    this.classList.add('selected');
                    this.querySelector('input[type="radio"]').checked = true;
                    
                    // Show/hide payment details
                    const method = this.getAttribute('data-method');
                    const bankDetails = document.getElementById('bankPaymentDetails');
                    const momoDetails = document.getElementById('momoPaymentDetails');
                    
                    // Ẩn tất cả details trước
                    bankDetails.style.display = 'none';
                    momoDetails.style.display = 'none';
                    
                    // Hiển thị details tương ứng
                    if (method === 'bank') {
                        bankDetails.style.display = 'block';
                        updateTransferAmount();
                    } else if (method === 'momo') {
                        momoDetails.style.display = 'block';
                        updateMoMoAmount();
                    }
                });
            });
            
            // City/District handling for Hanoi only
            const citySelect = document.getElementById('city');
            const districtSelect = document.getElementById('district');
            
            const hanoiDistricts = [
                'Ba Đình', 'Hoàn Kiếm', 'Tây Hồ', 'Long Biên', 'Cầu Giấy', 'Đống Đa', 
                'Hai Bà Trưng', 'Hoàng Mai', 'Thanh Xuân', 'Nam Từ Liêm', 'Bắc Từ Liêm', 
                'Hà Đông', 'Sơn Tây', 'Ba Vì', 'Chương Mỹ', 'Đan Phượng', 'Hoài Đức', 
                'Mê Linh', 'Mỹ Đức', 'Phú Xuyên', 'Phúc Thọ', 'Quốc Oai', 'Sóc Sơn', 
                'Thạch Thất', 'Thanh Oai', 'Thủy Nguyên', 'Ứng Hòa'
            ];
            
            // Load districts for Hanoi by default
            hanoiDistricts.forEach(district => {
                const option = document.createElement('option');
                option.value = district.toLowerCase().replace(/\s+/g, '');
                option.textContent = district;
                districtSelect.appendChild(option);
            });
            
            // Update transfer amount when form data changes
            function updateTransferAmount() {
                const customerName = document.getElementById('customerName').value;
                const transferAmountSpan = document.getElementById('transferAmount');
                
                if (transferAmountSpan) {
                    // Keep the same amount, just update display
                    transferAmountSpan.textContent = '<%= cart.finalTotal.toLocaleString("vi-VN") %>đ';
                }
                
                // Update transfer content suggestion
                if (customerName.trim()) {
                    const lastName = customerName.trim().split(' ').pop();
                    const transferContent = document.querySelector('.bank-info p:last-of-type');
                    if (transferContent) {
                        transferContent.innerHTML = '<strong>📝 Nội dung:</strong><br>SportShop ' + lastName;
                    }
                }
            }
            
            // Update MoMo amount when form data changes
            function updateMoMoAmount() {
                const customerName = document.getElementById('customerName').value;
                const momoAmountSpan = document.getElementById('momoAmount');
                const momoAmountText = document.getElementById('momoAmountText');
                
                if (momoAmountSpan) {
                    const amount = '<%= cart.finalTotal.toLocaleString("vi-VN") %>đ';
                    momoAmountSpan.textContent = amount;
                    momoAmountText.textContent = amount;
                }
                
                // Update transfer content suggestion in steps
                if (customerName.trim()) {
                    const lastName = customerName.trim().split(' ').pop();
                    const momoSteps = document.querySelector('.momo-steps ol li:nth-child(5)');
                    if (momoSteps) {
                        momoSteps.innerHTML = 'Nội dung: <strong>"SportShop ' + lastName + '"</strong>';
                    }
                }
            }
            
            // Update amounts when customer name changes
            document.getElementById('customerName').addEventListener('input', function() {
                updateTransferAmount();
                updateMoMoAmount();
            });
            
            // Form validation
            function validateForm() {
                const requiredFields = form.querySelectorAll('input[required], select[required], textarea[required]');
                let isValid = true;
                
                requiredFields.forEach(field => {
                    const errorMsg = field.parentNode.querySelector('.error-message');
                    
                    if (!field.value.trim()) {
                        field.classList.add('error');
                        if (errorMsg) errorMsg.style.display = 'block';
                        isValid = false;
                    } else {
                        field.classList.remove('error');
                        if (errorMsg) errorMsg.style.display = 'none';
                        
                        // Email validation
                        if (field.type === 'email') {
                            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                            if (!emailRegex.test(field.value)) {
                                field.classList.add('error');
                                if (errorMsg) {
                                    errorMsg.textContent = 'Email không hợp lệ';
                                    errorMsg.style.display = 'block';
                                }
                                isValid = false;
                            }
                        }
                        
                        // Phone validation
                        if (field.type === 'tel') {
                            const phoneRegex = /^[0-9]{10,11}$/;
                            const cleanPhone = field.value.replace(/[\s\-\(\)]/g, '');
                            if (!phoneRegex.test(cleanPhone)) {
                                field.classList.add('error');
                                if (errorMsg) {
                                    errorMsg.textContent = 'Số điện thoại phải có 10-11 chữ số';
                                    errorMsg.style.display = 'block';
                                }
                                isValid = false;
                            }
                        }
                    }
                });
                
                return isValid;
            }
            
            // Real-time validation
            form.addEventListener('input', function(e) {
                const field = e.target;
                const errorMsg = field.parentNode.querySelector('.error-message');
                
                if (field.value.trim()) {
                    field.classList.remove('error');
                    if (errorMsg) errorMsg.style.display = 'none';
                }
                
                // Update amounts if name field changes
                if (field.id === 'customerName') {
                    updateTransferAmount();
                    updateMoMoAmount();
                }
            });
            
            // Place order handler
            placeOrderBtn.addEventListener('click', function() {
                if (!validateForm()) {
                    showNotification('Vui lòng điền đầy đủ thông tin bắt buộc', 'error');
                    // Scroll to first error
                    const firstError = form.querySelector('.error');
                    if (firstError) {
                        firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                        firstError.focus();
                    }
                    return;
                }
                
                // Show loading state
                placeOrderBtn.style.display = 'none';
                loadingIndicator.classList.add('show');
                
                // Gather form data
                const formData = new FormData(form);
                const orderData = {
                    customerName: formData.get('customerName'),
                    customerEmail: formData.get('customerEmail'),
                    customerPhone: formData.get('customerPhone'),
                    shippingAddress: formData.get('shippingAddress'),
                    city: formData.get('city'),
                    district: formData.get('district'),
                    paymentMethod: formData.get('paymentMethod'),
                    notes: formData.get('orderNotes') || ''
                };
                
                console.log('Submitting order:', orderData);
                
                // Submit order
                fetch('/cart/checkout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(orderData)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    loadingIndicator.classList.remove('show');
                    placeOrderBtn.style.display = 'block';
                    
                    if (data.success) {
                        // Success handling
                        const paymentMethod = orderData.paymentMethod;
                        let successMessage = data.message;
                        
                        if (paymentMethod === 'bank' || paymentMethod === 'momo') {
                            successMessage += '\n\n💡 Hãy chụp ảnh màn hình thông tin thanh toán để tham khảo.';
                        }
                        
                        showNotification('🎉 ' + successMessage, 'success');
                        
                        // Redirect based on payment method
                        setTimeout(() => {
                            if (paymentMethod === 'bank' || paymentMethod === 'momo') {
                                // Keep user on page to see QR code
                                window.scrollTo({ top: 0, behavior: 'smooth' });
                            } else {
                                // Redirect to success page or cart
                                window.location.href = '/cart?success=1&orderId=' + (data.data?.orderId || '');
                            }
                        }, (paymentMethod === 'bank' || paymentMethod === 'momo') ? 5000 : 2000);
                        
                        // Disable form after successful submission
                        const inputs = form.querySelectorAll('input, select, textarea, button');
                        inputs.forEach(input => input.disabled = true);
                        placeOrderBtn.disabled = true;
                        placeOrderBtn.textContent = '✅ Đặt hàng thành công';
                        
                    } else {
                        // Error handling
                        showNotification('❌ ' + (data.message || 'Có lỗi xảy ra khi đặt hàng'), 'error');
                        
                        // Re-enable form
                        const inputs = form.querySelectorAll('input, select, textarea');
                        inputs.forEach(input => input.disabled = false);
                    }
                })
                .catch(error => {
                    console.error('Checkout error:', error);
                    loadingIndicator.classList.remove('show');
                    placeOrderBtn.style.display = 'block';
                    
                    let errorMessage = 'Có lỗi xảy ra khi đặt hàng. Vui lòng thử lại.';
                    
                    if (error.message.includes('Failed to fetch')) {
                        errorMessage = 'Lỗi kết nối. Vui lòng kiểm tra internet và thử lại.';
                    } else if (error.message.includes('500')) {
                        errorMessage = 'Lỗi server. Vui lòng thử lại sau ít phút.';
                    }
                    
                    showNotification('❌ ' + errorMessage, 'error');
                });
            });
            
            // Notification function
            function showNotification(message, type = 'success') {
                const notification = document.getElementById('notification');
                notification.innerHTML = message.replace(/\n/g, '<br>');
                notification.className = type === 'error' ? 'notification error show' : 'notification show';
                
                // Auto hide after 5 seconds for success, 8 seconds for error
                const hideAfter = type === 'error' ? 8000 : 5000;
                setTimeout(() => {
                    notification.classList.remove('show');
                }, hideAfter);
            }
            
            // Initialize: Show districts for Hanoi
            console.log('Checkout page initialized');
            console.log('Available districts:', hanoiDistricts.length);
            
            // Auto-focus first input
            setTimeout(() => {
                const firstInput = document.getElementById('customerName');
                if (firstInput) {
                    firstInput.focus();
                }
            }, 500);
            
            // Handle browser back button
            window.addEventListener('beforeunload', function(e) {
                const formData = new FormData(form);
                const hasData = Array.from(formData.values()).some(value => value.trim() !== '');
                
                if (hasData && !placeOrderBtn.disabled) {
                    e.preventDefault();
                    e.returnValue = 'Bạn có chắc muốn rời khỏi trang? Thông tin đã nhập sẽ bị mất.';
                }
            });
            
            // Keyboard shortcuts
            document.addEventListener('keydown', function(e) {
                // Ctrl/Cmd + Enter to submit form
                if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
                    e.preventDefault();
                    placeOrderBtn.click();
                }
                
                // Escape to close QR details
                if (e.key === 'Escape') {
                    const bankDetails = document.getElementById('bankPaymentDetails');
                    const momoDetails = document.getElementById('momoPaymentDetails');
                    if (bankDetails.style.display === 'block' || momoDetails.style.display === 'block') {
                        document.getElementById('cod').click();
                    }
                }
            });
        });
        
        // Image error handling for product images
        function handleImageError(img) {
            console.log('Image failed to load:', img.src);
            img.style.display = 'none';
            const fallback = img.nextElementSibling;
            if (fallback && fallback.classList.contains('emoji-fallback')) {
                fallback.style.display = 'flex';
            }
        }
        
        // Add error handlers to all product images
        document.addEventListener('DOMContentLoaded', function() {
            const productImages = document.querySelectorAll('.item-image img');
            productImages.forEach(img => {
                img.addEventListener('error', () => handleImageError(img));
            });
        });
    </script>
</body>
</html>